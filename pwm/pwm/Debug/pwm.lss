
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000118  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  0000016c  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000080  00000000  00000000  000008c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000404  00000000  00000000  00000940  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000140  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000379  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  00001200  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000e6  00000000  00000000  00001224  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000ac  00000000  00000000  0000130a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000070  00000000  00000000  000013b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e8 e1       	ldi	r30, 0x18	; 24
  48:	f1 e0       	ldi	r31, 0x01	; 1
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	a0 30       	cpi	r26, 0x00	; 0
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	11 e0       	ldi	r17, 0x01	; 1
  58:	a0 e0       	ldi	r26, 0x00	; 0
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a0 30       	cpi	r26, 0x00	; 0
  62:	b1 07       	cpc	r27, r17
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	02 d0       	rcall	.+4      	; 0x6c <main>
  68:	55 c0       	rjmp	.+170    	; 0x114 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 16000000UL
#include <util/delay.h>

int main(void)
{
	DDRD=255;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a b9       	out	0x0a, r24	; 10
	int a=0;
	TCCR0A|=(1<<COM0A1)|(1<<WGM00)|(1<<WGM01);
  70:	84 b5       	in	r24, 0x24	; 36
  72:	83 68       	ori	r24, 0x83	; 131
  74:	84 bd       	out	0x24, r24	; 36
	TCCR0B|=(1<<CS00)|(1<<WGM02);
  76:	85 b5       	in	r24, 0x25	; 37
  78:	89 60       	ori	r24, 0x09	; 9
  7a:	85 bd       	out	0x25, r24	; 37
	while(1)
	{
		for(a=0;a<255;a+=51)
  7c:	80 e0       	ldi	r24, 0x00	; 0
  7e:	90 e0       	ldi	r25, 0x00	; 0
			OCR0A=a;
			_delay_ms(50);
		}
		for(a=255;a>0;a-=51)
		{
			OCR0A=a;
  80:	ef ef       	ldi	r30, 0xFF	; 255
  82:	7c ec       	ldi	r23, 0xCC	; 204
  84:	69 e9       	ldi	r22, 0x99	; 153
  86:	56 e6       	ldi	r21, 0x66	; 102
  88:	43 e3       	ldi	r20, 0x33	; 51
	int a=0;
	TCCR0A|=(1<<COM0A1)|(1<<WGM00)|(1<<WGM01);
	TCCR0B|=(1<<CS00)|(1<<WGM02);
	while(1)
	{
		for(a=0;a<255;a+=51)
  8a:	c0 e0       	ldi	r28, 0x00	; 0
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	0b c0       	rjmp	.+22     	; 0xa6 <main+0x3a>
		{
			OCR0A=a;
  90:	87 bd       	out	0x27, r24	; 39
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	0f ef       	ldi	r16, 0xFF	; 255
  94:	10 e7       	ldi	r17, 0x70	; 112
  96:	22 e0       	ldi	r18, 0x02	; 2
  98:	01 50       	subi	r16, 0x01	; 1
  9a:	10 40       	sbci	r17, 0x00	; 0
  9c:	20 40       	sbci	r18, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x2c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x36>
  a2:	00 00       	nop
	int a=0;
	TCCR0A|=(1<<COM0A1)|(1<<WGM00)|(1<<WGM01);
	TCCR0B|=(1<<CS00)|(1<<WGM02);
	while(1)
	{
		for(a=0;a<255;a+=51)
  a4:	c3 96       	adiw	r24, 0x33	; 51
  a6:	8f 3f       	cpi	r24, 0xFF	; 255
  a8:	91 05       	cpc	r25, r1
  aa:	94 f3       	brlt	.-28     	; 0x90 <main+0x24>
			OCR0A=a;
			_delay_ms(50);
		}
		for(a=255;a>0;a-=51)
		{
			OCR0A=a;
  ac:	e7 bd       	out	0x27, r30	; 39
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	90 e7       	ldi	r25, 0x70	; 112
  b2:	a2 e0       	ldi	r26, 0x02	; 2
  b4:	81 50       	subi	r24, 0x01	; 1
  b6:	90 40       	sbci	r25, 0x00	; 0
  b8:	a0 40       	sbci	r26, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x48>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x52>
  be:	00 00       	nop
  c0:	77 bd       	out	0x27, r23	; 39
  c2:	0f ef       	ldi	r16, 0xFF	; 255
  c4:	10 e7       	ldi	r17, 0x70	; 112
  c6:	22 e0       	ldi	r18, 0x02	; 2
  c8:	01 50       	subi	r16, 0x01	; 1
  ca:	10 40       	sbci	r17, 0x00	; 0
  cc:	20 40       	sbci	r18, 0x00	; 0
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x5c>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <main+0x66>
  d2:	00 00       	nop
  d4:	67 bd       	out	0x27, r22	; 39
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	90 e7       	ldi	r25, 0x70	; 112
  da:	a2 e0       	ldi	r26, 0x02	; 2
  dc:	81 50       	subi	r24, 0x01	; 1
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	a0 40       	sbci	r26, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x70>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
  e8:	57 bd       	out	0x27, r21	; 39
  ea:	0f ef       	ldi	r16, 0xFF	; 255
  ec:	10 e7       	ldi	r17, 0x70	; 112
  ee:	22 e0       	ldi	r18, 0x02	; 2
  f0:	01 50       	subi	r16, 0x01	; 1
  f2:	10 40       	sbci	r17, 0x00	; 0
  f4:	20 40       	sbci	r18, 0x00	; 0
  f6:	e1 f7       	brne	.-8      	; 0xf0 <main+0x84>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x8e>
  fa:	00 00       	nop
  fc:	47 bd       	out	0x27, r20	; 39
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	90 e7       	ldi	r25, 0x70	; 112
 102:	a2 e0       	ldi	r26, 0x02	; 2
 104:	81 50       	subi	r24, 0x01	; 1
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	a0 40       	sbci	r26, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x98>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0xa2>
 10e:	00 00       	nop
	int a=0;
	TCCR0A|=(1<<COM0A1)|(1<<WGM00)|(1<<WGM01);
	TCCR0B|=(1<<CS00)|(1<<WGM02);
	while(1)
	{
		for(a=0;a<255;a+=51)
 110:	ce 01       	movw	r24, r28
 112:	c9 cf       	rjmp	.-110    	; 0xa6 <main+0x3a>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
