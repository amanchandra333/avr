
communication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000da  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000000da  0000014e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000154  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000375  00000000  00000000  00000928  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000ce  00000000  00000000  00000c9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029e  00000000  00000000  00000d6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000100c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000b0  00000000  00000000  00001030  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ed       	ldi	r30, 0xDA	; 218
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
int temp=1;
char b='y';

int main(void)
{
	DDRB=255;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	87 bb       	out	0x17, r24	; 23
	UCSRA|=0;
  96:	8b b1       	in	r24, 0x0b	; 11
  98:	8b b9       	out	0x0b, r24	; 11
	UCSRB|=(1<<TXEN)|(1<<RXEN);
  9a:	8a b1       	in	r24, 0x0a	; 10
  9c:	88 61       	ori	r24, 0x18	; 24
  9e:	8a b9       	out	0x0a, r24	; 10
	UCSRC|=(1<<UCSZ0)|(1<<UCSZ1)|(1<<URSEL)|(1<<UPM1);
  a0:	80 b5       	in	r24, 0x20	; 32
  a2:	86 6a       	ori	r24, 0xA6	; 166
  a4:	80 bd       	out	0x20, r24	; 32
    {
		while(UCSRA&(1<<RXC)==0);
		temp=UDR;
		if(UDR==a)
		{
			PORTB^=(1<<PB0);
  a6:	41 e0       	ldi	r20, 0x01	; 1
	UCSRC|=(1<<UCSZ0)|(1<<UCSZ1)|(1<<URSEL)|(1<<UPM1);
    while(1)
    {
		while(UCSRA&(1<<RXC)==0);
		temp=UDR;
		if(UDR==a)
  a8:	20 91 63 00 	lds	r18, 0x0063
  ac:	30 91 64 00 	lds	r19, 0x0064
	UCSRA|=0;
	UCSRB|=(1<<TXEN)|(1<<RXEN);
	UCSRC|=(1<<UCSZ0)|(1<<UCSZ1)|(1<<URSEL)|(1<<UPM1);
    while(1)
    {
		while(UCSRA&(1<<RXC)==0);
  b0:	8b b1       	in	r24, 0x0b	; 11
		temp=UDR;
  b2:	8c b1       	in	r24, 0x0c	; 12
  b4:	80 93 61 00 	sts	0x0061, r24
  b8:	10 92 62 00 	sts	0x0062, r1
		if(UDR==a)
  bc:	8c b1       	in	r24, 0x0c	; 12
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	82 17       	cp	r24, r18
  c2:	93 07       	cpc	r25, r19
  c4:	a9 f7       	brne	.-22     	; 0xb0 <main+0x1e>
		{
			PORTB^=(1<<PB0);
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	84 27       	eor	r24, r20
  ca:	88 bb       	out	0x18, r24	; 24
			while(UCSRA&(1<<UDRE)==0);
  cc:	8b b1       	in	r24, 0x0b	; 11
		UDR=b;
  ce:	80 91 60 00 	lds	r24, 0x0060
  d2:	8c b9       	out	0x0c, r24	; 12
  d4:	e9 cf       	rjmp	.-46     	; 0xa8 <main+0x16>

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>
