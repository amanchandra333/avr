
pot led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800060  00800060  00000196  2**0
                  ALLOC
  2 .stab         000006cc  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000080  00000000  00000000  000008f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000035e  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000aa  00000000  00000000  00000cce  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029f  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001018  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000009f  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 36       	cpi	r26, 0x66	; 102
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <util/delay.h>
#include <math.h>
int a,b,c;
int main()
{
	ADCSRA|=(1<<ADEN)|(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
  92:	86 b1       	in	r24, 0x06	; 6
  94:	87 68       	ori	r24, 0x87	; 135
  96:	86 b9       	out	0x06, r24	; 6
	DDRB=255;
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	87 bb       	out	0x17, r24	; 23
	ADMUX|=(1<<REFS0);
  9c:	3e 9a       	sbi	0x07, 6	; 7
		else if (a<=768)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
		else if (a<=896)
		PORTB=(1<<PB0)|(1<<PB1);
		else if (a<=1024)
		PORTB=(1<<PB0);
  9e:	f1 e0       	ldi	r31, 0x01	; 1
		else if (a<=640)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
		else if (a<=768)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
		else if (a<=896)
		PORTB=(1<<PB0)|(1<<PB1);
  a0:	e3 e0       	ldi	r30, 0x03	; 3
		else if (a<=512)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4);
		else if (a<=640)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
		else if (a<=768)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
  a2:	77 e0       	ldi	r23, 0x07	; 7
		else if (a<=384)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5);
		else if (a<=512)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4);
		else if (a<=640)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
  a4:	6f e0       	ldi	r22, 0x0F	; 15
		else if (a<=256)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5)|(1<<PB6);
		else if (a<=384)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5);
		else if (a<=512)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4);
  a6:	5f e1       	ldi	r21, 0x1F	; 31
	if (a<=128)
		PORTB=255;
		else if (a<=256)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5)|(1<<PB6);
		else if (a<=384)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5);
  a8:	4f e3       	ldi	r20, 0x3F	; 63
	a=ADC;
	
	if (a<=128)
		PORTB=255;
		else if (a<=256)
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5)|(1<<PB6);
  aa:	3f e7       	ldi	r19, 0x7F	; 127
	while(ADCSRA&(1<<ADSC));

	a=ADC;
	
	if (a<=128)
		PORTB=255;
  ac:	2f ef       	ldi	r18, 0xFF	; 255
	DDRB=255;
	ADMUX|=(1<<REFS0);
	
	while(1)
	{
		ADCSRA|=(1<<ADSC);
  ae:	36 9a       	sbi	0x06, 6	; 6
	while(ADCSRA&(1<<ADSC));
  b0:	36 99       	sbic	0x06, 6	; 6
  b2:	fe cf       	rjmp	.-4      	; 0xb0 <main+0x1e>

	a=ADC;
  b4:	84 b1       	in	r24, 0x04	; 4
  b6:	95 b1       	in	r25, 0x05	; 5
  b8:	90 93 65 00 	sts	0x0065, r25
  bc:	80 93 64 00 	sts	0x0064, r24
	
	if (a<=128)
  c0:	81 38       	cpi	r24, 0x81	; 129
  c2:	91 05       	cpc	r25, r1
  c4:	14 f4       	brge	.+4      	; 0xca <main+0x38>
		PORTB=255;
  c6:	28 bb       	out	0x18, r18	; 24
  c8:	f2 cf       	rjmp	.-28     	; 0xae <main+0x1c>
		else if (a<=256)
  ca:	a1 e0       	ldi	r26, 0x01	; 1
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	9a 07       	cpc	r25, r26
  d0:	14 f4       	brge	.+4      	; 0xd6 <main+0x44>
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5)|(1<<PB6);
  d2:	38 bb       	out	0x18, r19	; 24
  d4:	ec cf       	rjmp	.-40     	; 0xae <main+0x1c>
		else if (a<=384)
  d6:	a1 e0       	ldi	r26, 0x01	; 1
  d8:	81 38       	cpi	r24, 0x81	; 129
  da:	9a 07       	cpc	r25, r26
  dc:	14 f4       	brge	.+4      	; 0xe2 <main+0x50>
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4)|(1<<PB5);
  de:	48 bb       	out	0x18, r20	; 24
  e0:	e6 cf       	rjmp	.-52     	; 0xae <main+0x1c>
		else if (a<=512)
  e2:	a2 e0       	ldi	r26, 0x02	; 2
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	9a 07       	cpc	r25, r26
  e8:	14 f4       	brge	.+4      	; 0xee <main+0x5c>
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3)|(1<<PB4);
  ea:	58 bb       	out	0x18, r21	; 24
  ec:	e0 cf       	rjmp	.-64     	; 0xae <main+0x1c>
		else if (a<=640)
  ee:	a2 e0       	ldi	r26, 0x02	; 2
  f0:	81 38       	cpi	r24, 0x81	; 129
  f2:	9a 07       	cpc	r25, r26
  f4:	14 f4       	brge	.+4      	; 0xfa <main+0x68>
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2)|(1<<PB3);
  f6:	68 bb       	out	0x18, r22	; 24
  f8:	da cf       	rjmp	.-76     	; 0xae <main+0x1c>
		else if (a<=768)
  fa:	a3 e0       	ldi	r26, 0x03	; 3
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	9a 07       	cpc	r25, r26
 100:	14 f4       	brge	.+4      	; 0x106 <main+0x74>
		PORTB=(1<<PB0)|(1<<PB1)|(1<<PB2);
 102:	78 bb       	out	0x18, r23	; 24
 104:	d4 cf       	rjmp	.-88     	; 0xae <main+0x1c>
		else if (a<=896)
 106:	a3 e0       	ldi	r26, 0x03	; 3
 108:	81 38       	cpi	r24, 0x81	; 129
 10a:	9a 07       	cpc	r25, r26
 10c:	14 f4       	brge	.+4      	; 0x112 <main+0x80>
		PORTB=(1<<PB0)|(1<<PB1);
 10e:	e8 bb       	out	0x18, r30	; 24
 110:	ce cf       	rjmp	.-100    	; 0xae <main+0x1c>
		else if (a<=1024)
 112:	a4 e0       	ldi	r26, 0x04	; 4
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	9a 07       	cpc	r25, r26
 118:	54 f6       	brge	.-108    	; 0xae <main+0x1c>
		PORTB=(1<<PB0);
 11a:	f8 bb       	out	0x18, r31	; 24
 11c:	c8 cf       	rjmp	.-112    	; 0xae <main+0x1c>

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
